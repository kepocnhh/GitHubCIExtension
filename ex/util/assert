#!/bin/bash

[ $# -eq 0 ] && . ex/util/throw 11 "Empty arguments!"

ASSERT_OPTION="$1"

case "$ASSERT_OPTION" in
 -eq)
  . ex/util/args/require $# 3
  ASSERT_EXPECTED="$2"
  ASSERT_ACTUAL="$3"
  . ex/util/require $ASSERT_EXPECTED $ASSERT_ACTUAL
  if test "${!ASSERT_EXPECTED}" != "${!ASSERT_ACTUAL}"; then
   . ex/util/throw 21 "Actual is \"${!ASSERT_ACTUAL}\", but expected is \"${!ASSERT_EXPECTED}\"!"
  fi;;
 -eqv)
  . ex/util/args/require $# 3
  ASSERT_EXPECTED="$2"
  ASSERT_ACTUAL="$3"
  . ex/util/require ASSERT_EXPECTED ASSERT_ACTUAL
  if test "$ASSERT_EXPECTED" != "$ASSERT_ACTUAL"; then
   . ex/util/throw 22 "Actual is \"$ASSERT_ACTUAL\", but expected is \"$ASSERT_EXPECTED\"!"
  fi;;
 -f)
  [ $# -eq 1 ] && . ex/util/throw 131 "Script needs more arguments!"
  for (( FILE_PATH_INDEX=2; FILE_PATH_INDEX<=$#; FILE_PATH_INDEX++ )); do
   FILE_PATH="${!FILE_PATH_INDEX}"
   . ex/util/require FILE_PATH
   [ ! -s "$FILE_PATH" ] && . ex/util/throw 132 "File \"$FILE_PATH\" does not exist!"
  done;;
 -d)
  . ex/util/args/require $# 2
  DIR_PATH="$2"
  . ex/util/require DIR_PATH
  if [ ! -d "$DIR_PATH" ]; then
   . ex/util/throw 24 "Dir \"$DIR_PATH\" does not exist!"
  fi;;
 *) echo "Assert | Option \"$ASSERT_OPTION\" is not supported!"; exit 91;;
esac
